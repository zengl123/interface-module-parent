// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_dis.proto

package com.drore.tdp.bo.gps;

public final class EventDis {
  private EventDis() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class CommEventLog extends
      com.google.protobuf.GeneratedMessage {
    // Use CommEventLog.newBuilder() to construct.
    private CommEventLog() {
      initFields();
    }
    private CommEventLog(boolean noInit) {}
    
    private static final CommEventLog defaultInstance;
    public static CommEventLog getDefaultInstance() {
      return defaultInstance;
    }
    
    public CommEventLog getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return  EventDis.internal_static_com_hikvision_cms_api_eps_beds_CommEventLog_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return EventDis.internal_static_com_hikvision_cms_api_eps_beds_CommEventLog_fieldAccessorTable;
    }
    
    // required string log_id = 1;
    public static final int LOG_ID_FIELD_NUMBER = 1;
    private boolean hasLogId;
    private String logId_ = "";
    public boolean hasLogId() { return hasLogId; }
    public String getLogId() { return logId_; }
    
    // required int32 event_state = 2;
    public static final int EVENT_STATE_FIELD_NUMBER = 2;
    private boolean hasEventState;
    private int eventState_ = 0;
    public boolean hasEventState() { return hasEventState; }
    public int getEventState() { return eventState_; }
    
    // optional int32 event_level = 3;
    public static final int EVENT_LEVEL_FIELD_NUMBER = 3;
    private boolean hasEventLevel;
    private int eventLevel_ = 0;
    public boolean hasEventLevel() { return hasEventLevel; }
    public int getEventLevel() { return eventLevel_; }
    
    // optional string unit_idx = 4;
    public static final int UNIT_IDX_FIELD_NUMBER = 4;
    private boolean hasUnitIdx;
    private String unitIdx_ = "";
    public boolean hasUnitIdx() { return hasUnitIdx; }
    public String getUnitIdx() { return unitIdx_; }
    
    // optional int32 event_type = 5;
    public static final int EVENT_TYPE_FIELD_NUMBER = 5;
    private boolean hasEventType;
    private int eventType_ = 0;
    public boolean hasEventType() { return hasEventType; }
    public int getEventType() { return eventType_; }
    
    // optional string event_type_name = 6;
    public static final int EVENT_TYPE_NAME_FIELD_NUMBER = 6;
    private boolean hasEventTypeName;
    private String eventTypeName_ = "";
    public boolean hasEventTypeName() { return hasEventTypeName; }
    public String getEventTypeName() { return eventTypeName_; }
    
    // optional int32 sub_sys_type = 7;
    public static final int SUB_SYS_TYPE_FIELD_NUMBER = 7;
    private boolean hasSubSysType;
    private int subSysType_ = 0;
    public boolean hasSubSysType() { return hasSubSysType; }
    public int getSubSysType() { return subSysType_; }
    
    // optional string event_name = 8;
    public static final int EVENT_NAME_FIELD_NUMBER = 8;
    private boolean hasEventName;
    private String eventName_ = "";
    public boolean hasEventName() { return hasEventName; }
    public String getEventName() { return eventName_; }
    
    // optional string start_time = 9;
    public static final int START_TIME_FIELD_NUMBER = 9;
    private boolean hasStartTime;
    private String startTime_ = "";
    public boolean hasStartTime() { return hasStartTime; }
    public String getStartTime() { return startTime_; }
    
    // optional string stop_time = 10;
    public static final int STOP_TIME_FIELD_NUMBER = 10;
    private boolean hasStopTime;
    private String stopTime_ = "";
    public boolean hasStopTime() { return hasStopTime; }
    public String getStopTime() { return stopTime_; }
    
    // optional string source_idx = 11;
    public static final int SOURCE_IDX_FIELD_NUMBER = 11;
    private boolean hasSourceIdx;
    private String sourceIdx_ = "";
    public boolean hasSourceIdx() { return hasSourceIdx; }
    public String getSourceIdx() { return sourceIdx_; }
    
    // optional int32 source_type = 12;
    public static final int SOURCE_TYPE_FIELD_NUMBER = 12;
    private boolean hasSourceType;
    private int sourceType_ = 0;
    public boolean hasSourceType() { return hasSourceType; }
    public int getSourceType() { return sourceType_; }
    
    // optional string source_name = 13;
    public static final int SOURCE_NAME_FIELD_NUMBER = 13;
    private boolean hasSourceName;
    private String sourceName_ = "";
    public boolean hasSourceName() { return hasSourceName; }
    public String getSourceName() { return sourceName_; }
    
    // optional string log_txt = 14;
    public static final int LOG_TXT_FIELD_NUMBER = 14;
    private boolean hasLogTxt;
    private String logTxt_ = "";
    public boolean hasLogTxt() { return hasLogTxt; }
    public String getLogTxt() { return logTxt_; }
    
    // optional string region_idx = 15;
    public static final int REGION_IDX_FIELD_NUMBER = 15;
    private boolean hasRegionIdx;
    private String regionIdx_ = "";
    public boolean hasRegionIdx() { return hasRegionIdx; }
    public String getRegionIdx() { return regionIdx_; }
    
    // optional bytes ext_info = 20;
    public static final int EXT_INFO_FIELD_NUMBER = 20;
    private boolean hasExtInfo;
    private com.google.protobuf.ByteString extInfo_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasExtInfo() { return hasExtInfo; }
    public com.google.protobuf.ByteString getExtInfo() { return extInfo_; }
    
    // repeated int32 user_id = 21;
    public static final int USER_ID_FIELD_NUMBER = 21;
    private java.util.List<Integer> userId_ =
      java.util.Collections.emptyList();
    public java.util.List<Integer> getUserIdList() {
      return userId_;
    }
    public int getUserIdCount() { return userId_.size(); }
    public int getUserId(int index) {
      return userId_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasLogId) return false;
      if (!hasEventState) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasLogId()) {
        output.writeString(1, getLogId());
      }
      if (hasEventState()) {
        output.writeInt32(2, getEventState());
      }
      if (hasEventLevel()) {
        output.writeInt32(3, getEventLevel());
      }
      if (hasUnitIdx()) {
        output.writeString(4, getUnitIdx());
      }
      if (hasEventType()) {
        output.writeInt32(5, getEventType());
      }
      if (hasEventTypeName()) {
        output.writeString(6, getEventTypeName());
      }
      if (hasSubSysType()) {
        output.writeInt32(7, getSubSysType());
      }
      if (hasEventName()) {
        output.writeString(8, getEventName());
      }
      if (hasStartTime()) {
        output.writeString(9, getStartTime());
      }
      if (hasStopTime()) {
        output.writeString(10, getStopTime());
      }
      if (hasSourceIdx()) {
        output.writeString(11, getSourceIdx());
      }
      if (hasSourceType()) {
        output.writeInt32(12, getSourceType());
      }
      if (hasSourceName()) {
        output.writeString(13, getSourceName());
      }
      if (hasLogTxt()) {
        output.writeString(14, getLogTxt());
      }
      if (hasRegionIdx()) {
        output.writeString(15, getRegionIdx());
      }
      if (hasExtInfo()) {
        output.writeBytes(20, getExtInfo());
      }
      for (int element : getUserIdList()) {
        output.writeInt32(21, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasLogId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getLogId());
      }
      if (hasEventState()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getEventState());
      }
      if (hasEventLevel()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getEventLevel());
      }
      if (hasUnitIdx()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getUnitIdx());
      }
      if (hasEventType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getEventType());
      }
      if (hasEventTypeName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getEventTypeName());
      }
      if (hasSubSysType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getSubSysType());
      }
      if (hasEventName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getEventName());
      }
      if (hasStartTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(9, getStartTime());
      }
      if (hasStopTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getStopTime());
      }
      if (hasSourceIdx()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(11, getSourceIdx());
      }
      if (hasSourceType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, getSourceType());
      }
      if (hasSourceName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(13, getSourceName());
      }
      if (hasLogTxt()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(14, getLogTxt());
      }
      if (hasRegionIdx()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(15, getRegionIdx());
      }
      if (hasExtInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, getExtInfo());
      }
      {
        int dataSize = 0;
        for (int element : getUserIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 2 * getUserIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static CommEventLog parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static CommEventLog parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static CommEventLog parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static CommEventLog parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static CommEventLog parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static CommEventLog parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static CommEventLog parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static CommEventLog parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static CommEventLog parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static CommEventLog parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(CommEventLog prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private CommEventLog result;

      // Construct using com.hikvision.cms.api.eps.beds.EventDis.CommEventLog.newBuilder()
      private Builder() {}

      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new CommEventLog();
        return builder;
      }

      protected CommEventLog internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new CommEventLog();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CommEventLog.getDescriptor();
      }

      public CommEventLog getDefaultInstanceForType() {
        return CommEventLog.getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }
      public CommEventLog build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private CommEventLog buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public CommEventLog buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.userId_ != java.util.Collections.EMPTY_LIST) {
          result.userId_ =
            java.util.Collections.unmodifiableList(result.userId_);
        }
        CommEventLog returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CommEventLog) {
          return mergeFrom((CommEventLog)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CommEventLog other) {
        if (other == CommEventLog.getDefaultInstance()) return this;
        if (other.hasLogId()) {
          setLogId(other.getLogId());
        }
        if (other.hasEventState()) {
          setEventState(other.getEventState());
        }
        if (other.hasEventLevel()) {
          setEventLevel(other.getEventLevel());
        }
        if (other.hasUnitIdx()) {
          setUnitIdx(other.getUnitIdx());
        }
        if (other.hasEventType()) {
          setEventType(other.getEventType());
        }
        if (other.hasEventTypeName()) {
          setEventTypeName(other.getEventTypeName());
        }
        if (other.hasSubSysType()) {
          setSubSysType(other.getSubSysType());
        }
        if (other.hasEventName()) {
          setEventName(other.getEventName());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasStopTime()) {
          setStopTime(other.getStopTime());
        }
        if (other.hasSourceIdx()) {
          setSourceIdx(other.getSourceIdx());
        }
        if (other.hasSourceType()) {
          setSourceType(other.getSourceType());
        }
        if (other.hasSourceName()) {
          setSourceName(other.getSourceName());
        }
        if (other.hasLogTxt()) {
          setLogTxt(other.getLogTxt());
        }
        if (other.hasRegionIdx()) {
          setRegionIdx(other.getRegionIdx());
        }
        if (other.hasExtInfo()) {
          setExtInfo(other.getExtInfo());
        }
        if (!other.userId_.isEmpty()) {
          if (result.userId_.isEmpty()) {
            result.userId_ = new java.util.ArrayList<Integer>();
          }
          result.userId_.addAll(other.userId_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setLogId(input.readString());
              break;
            }
            case 16: {
              setEventState(input.readInt32());
              break;
            }
            case 24: {
              setEventLevel(input.readInt32());
              break;
            }
            case 34: {
              setUnitIdx(input.readString());
              break;
            }
            case 40: {
              setEventType(input.readInt32());
              break;
            }
            case 50: {
              setEventTypeName(input.readString());
              break;
            }
            case 56: {
              setSubSysType(input.readInt32());
              break;
            }
            case 66: {
              setEventName(input.readString());
              break;
            }
            case 74: {
              setStartTime(input.readString());
              break;
            }
            case 82: {
              setStopTime(input.readString());
              break;
            }
            case 90: {
              setSourceIdx(input.readString());
              break;
            }
            case 96: {
              setSourceType(input.readInt32());
              break;
            }
            case 106: {
              setSourceName(input.readString());
              break;
            }
            case 114: {
              setLogTxt(input.readString());
              break;
            }
            case 122: {
              setRegionIdx(input.readString());
              break;
            }
            case 162: {
              setExtInfo(input.readBytes());
              break;
            }
            case 168: {
              addUserId(input.readInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addUserId(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }


      // required string log_id = 1;
      public boolean hasLogId() {
        return result.hasLogId();
      }
      public String getLogId() {
        return result.getLogId();
      }
      public Builder setLogId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasLogId = true;
        result.logId_ = value;
        return this;
      }
      public Builder clearLogId() {
        result.hasLogId = false;
        result.logId_ = getDefaultInstance().getLogId();
        return this;
      }

      // required int32 event_state = 2;
      public boolean hasEventState() {
        return result.hasEventState();
      }
      public int getEventState() {
        return result.getEventState();
      }
      public Builder setEventState(int value) {
        result.hasEventState = true;
        result.eventState_ = value;
        return this;
      }
      public Builder clearEventState() {
        result.hasEventState = false;
        result.eventState_ = 0;
        return this;
      }

      // optional int32 event_level = 3;
      public boolean hasEventLevel() {
        return result.hasEventLevel();
      }
      public int getEventLevel() {
        return result.getEventLevel();
      }
      public Builder setEventLevel(int value) {
        result.hasEventLevel = true;
        result.eventLevel_ = value;
        return this;
      }
      public Builder clearEventLevel() {
        result.hasEventLevel = false;
        result.eventLevel_ = 0;
        return this;
      }

      // optional string unit_idx = 4;
      public boolean hasUnitIdx() {
        return result.hasUnitIdx();
      }
      public String getUnitIdx() {
        return result.getUnitIdx();
      }
      public Builder setUnitIdx(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUnitIdx = true;
        result.unitIdx_ = value;
        return this;
      }
      public Builder clearUnitIdx() {
        result.hasUnitIdx = false;
        result.unitIdx_ = getDefaultInstance().getUnitIdx();
        return this;
      }

      // optional int32 event_type = 5;
      public boolean hasEventType() {
        return result.hasEventType();
      }
      public int getEventType() {
        return result.getEventType();
      }
      public Builder setEventType(int value) {
        result.hasEventType = true;
        result.eventType_ = value;
        return this;
      }
      public Builder clearEventType() {
        result.hasEventType = false;
        result.eventType_ = 0;
        return this;
      }

      // optional string event_type_name = 6;
      public boolean hasEventTypeName() {
        return result.hasEventTypeName();
      }
      public String getEventTypeName() {
        return result.getEventTypeName();
      }
      public Builder setEventTypeName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEventTypeName = true;
        result.eventTypeName_ = value;
        return this;
      }
      public Builder clearEventTypeName() {
        result.hasEventTypeName = false;
        result.eventTypeName_ = getDefaultInstance().getEventTypeName();
        return this;
      }

      // optional int32 sub_sys_type = 7;
      public boolean hasSubSysType() {
        return result.hasSubSysType();
      }
      public int getSubSysType() {
        return result.getSubSysType();
      }
      public Builder setSubSysType(int value) {
        result.hasSubSysType = true;
        result.subSysType_ = value;
        return this;
      }
      public Builder clearSubSysType() {
        result.hasSubSysType = false;
        result.subSysType_ = 0;
        return this;
      }

      // optional string event_name = 8;
      public boolean hasEventName() {
        return result.hasEventName();
      }
      public String getEventName() {
        return result.getEventName();
      }
      public Builder setEventName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEventName = true;
        result.eventName_ = value;
        return this;
      }
      public Builder clearEventName() {
        result.hasEventName = false;
        result.eventName_ = getDefaultInstance().getEventName();
        return this;
      }

      // optional string start_time = 9;
      public boolean hasStartTime() {
        return result.hasStartTime();
      }
      public String getStartTime() {
        return result.getStartTime();
      }
      public Builder setStartTime(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStartTime = true;
        result.startTime_ = value;
        return this;
      }
      public Builder clearStartTime() {
        result.hasStartTime = false;
        result.startTime_ = getDefaultInstance().getStartTime();
        return this;
      }

      // optional string stop_time = 10;
      public boolean hasStopTime() {
        return result.hasStopTime();
      }
      public String getStopTime() {
        return result.getStopTime();
      }
      public Builder setStopTime(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStopTime = true;
        result.stopTime_ = value;
        return this;
      }
      public Builder clearStopTime() {
        result.hasStopTime = false;
        result.stopTime_ = getDefaultInstance().getStopTime();
        return this;
      }

      // optional string source_idx = 11;
      public boolean hasSourceIdx() {
        return result.hasSourceIdx();
      }
      public String getSourceIdx() {
        return result.getSourceIdx();
      }
      public Builder setSourceIdx(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSourceIdx = true;
        result.sourceIdx_ = value;
        return this;
      }
      public Builder clearSourceIdx() {
        result.hasSourceIdx = false;
        result.sourceIdx_ = getDefaultInstance().getSourceIdx();
        return this;
      }

      // optional int32 source_type = 12;
      public boolean hasSourceType() {
        return result.hasSourceType();
      }
      public int getSourceType() {
        return result.getSourceType();
      }
      public Builder setSourceType(int value) {
        result.hasSourceType = true;
        result.sourceType_ = value;
        return this;
      }
      public Builder clearSourceType() {
        result.hasSourceType = false;
        result.sourceType_ = 0;
        return this;
      }

      // optional string source_name = 13;
      public boolean hasSourceName() {
        return result.hasSourceName();
      }
      public String getSourceName() {
        return result.getSourceName();
      }
      public Builder setSourceName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSourceName = true;
        result.sourceName_ = value;
        return this;
      }
      public Builder clearSourceName() {
        result.hasSourceName = false;
        result.sourceName_ = getDefaultInstance().getSourceName();
        return this;
      }

      // optional string log_txt = 14;
      public boolean hasLogTxt() {
        return result.hasLogTxt();
      }
      public String getLogTxt() {
        return result.getLogTxt();
      }
      public Builder setLogTxt(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasLogTxt = true;
        result.logTxt_ = value;
        return this;
      }
      public Builder clearLogTxt() {
        result.hasLogTxt = false;
        result.logTxt_ = getDefaultInstance().getLogTxt();
        return this;
      }

      // optional string region_idx = 15;
      public boolean hasRegionIdx() {
        return result.hasRegionIdx();
      }
      public String getRegionIdx() {
        return result.getRegionIdx();
      }
      public Builder setRegionIdx(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRegionIdx = true;
        result.regionIdx_ = value;
        return this;
      }
      public Builder clearRegionIdx() {
        result.hasRegionIdx = false;
        result.regionIdx_ = getDefaultInstance().getRegionIdx();
        return this;
      }

      // optional bytes ext_info = 20;
      public boolean hasExtInfo() {
        return result.hasExtInfo();
      }
      public com.google.protobuf.ByteString getExtInfo() {
        return result.getExtInfo();
      }
      public Builder setExtInfo(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasExtInfo = true;
        result.extInfo_ = value;
        return this;
      }
      public Builder clearExtInfo() {
        result.hasExtInfo = false;
        result.extInfo_ = getDefaultInstance().getExtInfo();
        return this;
      }

      // repeated int32 user_id = 21;
      public java.util.List<Integer> getUserIdList() {
        return java.util.Collections.unmodifiableList(result.userId_);
      }
      public int getUserIdCount() {
        return result.getUserIdCount();
      }
      public int getUserId(int index) {
        return result.getUserId(index);
      }
      public Builder setUserId(int index, int value) {
        result.userId_.set(index, value);
        return this;
      }
      public Builder addUserId(int value) {
        if (result.userId_.isEmpty()) {
          result.userId_ = new java.util.ArrayList<Integer>();
        }
        result.userId_.add(value);
        return this;
      }
      public Builder addAllUserId(
          Iterable<? extends Integer> values) {
        if (result.userId_.isEmpty()) {
          result.userId_ = new java.util.ArrayList<Integer>();
        }
        super.addAll(values, result.userId_);
        return this;
      }
      public Builder clearUserId() {
        result.userId_ = java.util.Collections.emptyList();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.hikvision.cms.api.eps.beds.CommEventLog)
    }

    static {
      defaultInstance = new CommEventLog(true);
      EventDis.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.hikvision.cms.api.eps.beds.CommEventLog)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hikvision_cms_api_eps_beds_CommEventLog_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_hikvision_cms_api_eps_beds_CommEventLog_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\017event_dis.proto\022\036com.hikvision.cms.api" +
      ".eps.beds\032\ncomm.proto\"\336\002\n\014CommEventLog\022\016" +
      "\n\006log_id\030\001 \002(\t\022\023\n\013event_state\030\002 \002(\005\022\023\n\013e" +
      "vent_level\030\003 \001(\005\022\020\n\010unit_idx\030\004 \001(\t\022\022\n\nev" +
      "ent_type\030\005 \001(\005\022\027\n\017event_type_name\030\006 \001(\t\022" +
      "\024\n\014sub_sys_type\030\007 \001(\005\022\022\n\nevent_name\030\010 \001(" +
      "\t\022\022\n\nstart_time\030\t \001(\t\022\021\n\tstop_time\030\n \001(\t" +
      "\022\022\n\nsource_idx\030\013 \001(\t\022\023\n\013source_type\030\014 \001(" +
      "\005\022\023\n\013source_name\030\r \001(\t\022\017\n\007log_txt\030\016 \001(\t\022" +
      "\022\n\nregion_idx\030\017 \001(\t\022\020\n\010ext_info\030\024 \001(\014\022\017\n",
      "\007user_id\030\025 \003(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_hikvision_cms_api_eps_beds_CommEventLog_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_hikvision_cms_api_eps_beds_CommEventLog_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_hikvision_cms_api_eps_beds_CommEventLog_descriptor,
              new String[] { "LogId", "EventState", "EventLevel", "UnitIdx", "EventType", "EventTypeName", "SubSysType", "EventName", "StartTime", "StopTime", "SourceIdx", "SourceType", "SourceName", "LogTxt", "RegionIdx", "ExtInfo", "UserId", },
              CommEventLog.class,
              CommEventLog.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Comm.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
